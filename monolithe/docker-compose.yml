services:
  db:
    image: postgres:15
    container_name: brokerx-postgres-prod
    environment:
      POSTGRES_USER: brokerx_user
      POSTGRES_PASSWORD: brokerx_pass
      POSTGRES_DB: brokerx
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - brokerx-network

  app:
    image: brokerx-app:latest
    container_name: brokerx-app
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/brokerx
      - SPRING_DATASOURCE_USERNAME=brokerx_user
      - SPRING_DATASOURCE_PASSWORD=brokerx_pass
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - brokerx-network

  prometheus:
    image: prom/prometheus:latest
    container_name: brokerx-prometheus
    volumes:
    - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - brokerx-network

  grafana:
    image: grafana/grafana:latest
    container_name: brokerx-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - brokerx-network

volumes:
  postgres-data:
  prometheus-data:
  grafana-data:

networks:
  brokerx-network:
    driver: bridge