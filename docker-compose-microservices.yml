services:
  db:
    image: postgres:15
    container_name: brokerx-postgres
    environment:
      POSTGRES_USER: brokerx_user
      POSTGRES_PASSWORD: brokerx_pass
      POSTGRES_DB: brokerx
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - brokerx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U brokerx_user -d brokerx"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  account-service:
    build: ./account-service
    container_name: account-service
    ports:
      - "8081:8081"
    networks:
      - brokerx-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/brokerx
      - SPRING_DATASOURCE_USERNAME=brokerx_user
      - SPRING_DATASOURCE_PASSWORD=brokerx_pass

  wallet-service:
    build: ./wallet-service
    container_name: wallet-service
    ports:
      - "8082:8082"
    networks:
      - brokerx-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/brokerx
      - SPRING_DATASOURCE_USERNAME=brokerx_user
      - SPRING_DATASOURCE_PASSWORD=brokerx_pass

  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "8083:8083"
    networks:
      - brokerx-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/brokerx
      - SPRING_DATASOURCE_USERNAME=brokerx_user
      - SPRING_DATASOURCE_PASSWORD=brokerx_pass

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - brokerx-network
    depends_on:
      - account-service
      - wallet-service
      - order-service
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - .prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - '--storage.tsdb.path=/prometheus'
    networks:
      - brokerx-network
    
  grafana:
    image: grafana/grafana:latest
    container_name: brokerx-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - brokerx-network
    depends_on:
      - prometheus
    volumes:
      - .grafana-data:/var/lib/grafana

networks:
  brokerx-network:
    driver: bridge

volumes:
  postgres-data: